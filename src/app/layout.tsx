import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { useEffect } from "react";
import { AppRegistry } from "@/modules/app-registry.module";
import { useAuthStore } from "@/modules/auth/infrastructure/auth.state";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const { setToken } = useAuthStore();

  useEffect(() => {
    AppRegistry.registerModules(); // Se ejecuta al cargar la aplicación\
  }, []);

  useEffect(() => {
    AppRegistry.registerModules(); // Se ejecuta al cargar la aplicación

    const token = document.cookie
      .split("; ")
      .find((row) => row.startsWith("auth_token="))
      ?.split("=")[1];

    if (token) {
      setToken(token);
    }
  }, [setToken]);

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {children}
      </body>
    </html>
  );
}
